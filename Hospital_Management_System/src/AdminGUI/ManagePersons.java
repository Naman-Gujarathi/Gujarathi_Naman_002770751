/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package AdminGUI;

import code.PersonDirectory;
import code.Person;
import gui.createHospital;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rajvi
 */
public class ManagePersons extends javax.swing.JPanel {

    /**
     * Creates new form ManagePersons
     */
    JSplitPane sp;
        PersonDirectory personDirectory;
    public ManagePersons(JSplitPane sp,PersonDirectory personDirectory) {
        this.sp= sp;
        this.personDirectory=personDirectory;
        initComponents();
    }
    private void populatePersonTable(ArrayList<Person>personDirectory){
    DefaultTableModel model = (DefaultTableModel) personTable.getModel();
    model.setRowCount(0);
    if(personDirectory.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No Person Added. Please Add Person"
                    , "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    for(Person person : personDirectory){
    Object[] row = new Object[6];
            row[0] = person;
            row[1]= person.getPersonLastName();
            row[2]= person.getPersonAge();
            row[3]= person.getPersonGender();
            row[4]= person.getPersonContactNumber();
            row[5]=person.getPersonRole();
            
            model.addRow(row);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        addPersonButton = new javax.swing.JButton();
        viewPersonButton = new javax.swing.JButton();
        deletePersonButton = new javax.swing.JButton();
        editPersonButton = new javax.swing.JButton();
        personRefreshButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        viewPersonFNameText = new javax.swing.JTextField();
        viewPersonLNameText = new javax.swing.JTextField();
        viewPersonAgeText = new javax.swing.JTextField();
        viewPersonGenderText = new javax.swing.JTextField();
        viewPersonContactText = new javax.swing.JTextField();
        viewPersonRoleText = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 204));

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Age", "Gender", "Contact", "Role"
            }
        ));
        jScrollPane1.setViewportView(personTable);

        addPersonButton.setText("Add Person");
        addPersonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPersonButtonActionPerformed(evt);
            }
        });

        viewPersonButton.setText("View Person");
        viewPersonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPersonButtonActionPerformed(evt);
            }
        });

        deletePersonButton.setText("Delete Person");
        deletePersonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePersonButtonActionPerformed(evt);
            }
        });

        editPersonButton.setText("Edit Person");
        editPersonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPersonButtonActionPerformed(evt);
            }
        });

        personRefreshButton.setText("Refresh");
        personRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personRefreshButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("PERSON DIRECTORY");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setText("First Name :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel3.setText("Last Name :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel4.setText("Age :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel5.setText("Gender:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setText("Contact:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel7.setText("Role");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewPersonLNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(addPersonButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(personRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewPersonButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(editPersonButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(deletePersonButton))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(viewPersonFNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewPersonAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewPersonGenderText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewPersonContactText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewPersonRoleText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPersonButton)
                    .addComponent(viewPersonButton)
                    .addComponent(deletePersonButton)
                    .addComponent(editPersonButton)
                    .addComponent(personRefreshButton))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonFNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonLNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonGenderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonContactText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPersonRoleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addPersonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPersonButtonActionPerformed
        // TODO add your handling code here:
        CreatePerson newPanel = new CreatePerson(sp,personDirectory);
        sp.setRightComponent(newPanel);
    }//GEN-LAST:event_addPersonButtonActionPerformed

    private void editPersonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPersonButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = personTable.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this,"Please Select A row to be Updated");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) personTable.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        
        model.setValueAt(viewPersonFNameText.getText(),selectedRowIndex,0);
        model.setValueAt(viewPersonLNameText.getText(),selectedRowIndex,1);
        model.setValueAt(viewPersonAgeText.getText(),selectedRowIndex,2);
        model.setValueAt(viewPersonGenderText.getText(),selectedRowIndex,3);
        model.setValueAt(viewPersonContactText.getText(),selectedRowIndex,4);
        model.setValueAt(viewPersonRoleText.getText(),selectedRowIndex,5);
        
        String personFName = model.getValueAt(selectedRowIndex,0).toString();
        String personLName = model.getValueAt(selectedRowIndex,1).toString();
        String personAge = model.getValueAt(selectedRowIndex,2).toString();
        String personGender = model.getValueAt(selectedRowIndex,3).toString();
        String personContact = model.getValueAt(selectedRowIndex,4).toString();
        String personRole = model.getValueAt(selectedRowIndex,5).toString();
        
        updatePersonFName(selectedPerson,personFName);
        updatePersonLName(selectedPerson,personLName);
        updatePersonAge(selectedPerson,personAge);
        updatePersonGender(selectedPerson,personGender);
        updatePersonContact(selectedPerson,personContact);
        updatePersonRole(selectedPerson,personRole);
        
        populatePersonTable(personDirectory.getPersonHistory());
        
    }//GEN-LAST:event_editPersonButtonActionPerformed

    private void personRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personRefreshButtonActionPerformed
        // TODO add your handling code here:
        populatePersonTable(personDirectory.getPersonHistory());
    }//GEN-LAST:event_personRefreshButtonActionPerformed

    private void deletePersonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePersonButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow= personTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.", 
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Person person=(Person) personTable.getValueAt(selectedRow, 0);
        /*Ask confirmation*/
        int flag= JOptionPane.showConfirmDialog(this, "Are you sure want to remove?",
                "Warning", JOptionPane.YES_NO_OPTION);
        if(flag==0)
        {
            personDirectory.deletePerson(person);
            populatePersonTable(personDirectory.getPersonHistory());
        }
    }//GEN-LAST:event_deletePersonButtonActionPerformed

    private void viewPersonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPersonButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = personTable.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this,"There is no row present.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) personTable.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        
        viewPersonFNameText.setText(selectedPerson.getPersonFirstName());
        viewPersonLNameText.setText(selectedPerson.getPersonLastName());
        viewPersonAgeText.setText(String.valueOf(selectedPerson.getPersonAge()));
        viewPersonGenderText.setText(selectedPerson.getPersonGender());
        viewPersonContactText.setText(selectedPerson.getPersonContactNumber());
        viewPersonRoleText.setText(selectedPerson.getPersonRole());
        
        populatePersonTable(personDirectory.getPersonHistory());

    }//GEN-LAST:event_viewPersonButtonActionPerformed
    public void updatePersonFName(Person person, String personFName ){
        person.setPersonFirstName(personFName);
    }
    public void updatePersonLName(Person person, String personFName ){

        person.setPersonLastName(personFName);}
    
    public void updatePersonAge(Person person, String personFName ){
        person.setPersonAge(Integer.parseInt(personFName));}
    
   public void updatePersonGender(Person person, String personFName ){
    person.setPersonGender(personFName);}
   
   public void updatePersonContact(Person person, String personFName ){
        person.setPersonContactNumber(personFName);}
   
   public void updatePersonRole(Person person, String personFName ){
        person.setPersonRole(personFName);
        
        
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPersonButton;
    private javax.swing.JButton deletePersonButton;
    private javax.swing.JButton editPersonButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton personRefreshButton;
    private javax.swing.JTable personTable;
    private javax.swing.JTextField viewPersonAgeText;
    private javax.swing.JButton viewPersonButton;
    private javax.swing.JTextField viewPersonContactText;
    private javax.swing.JTextField viewPersonFNameText;
    private javax.swing.JTextField viewPersonGenderText;
    private javax.swing.JTextField viewPersonLNameText;
    private javax.swing.JTextField viewPersonRoleText;
    // End of variables declaration//GEN-END:variables
}
